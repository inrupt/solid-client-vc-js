name: CI

on: [push]

env:
  CI: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        node-version: [14.x, 12.x, 10.x]
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v2.1.4
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - run: npm ci
    - run: npm run lint
    - run: npm run build
    - run: npm test
    - run: npm run e2e-test-node
      # To prevent conflicts of multiple jobs trying to modify the same Resource at the same time,
      # and because behaviour on different OS's is already tested by unit tests,
      # end-to-end tests only need to run on one OS:
      if: runner.os == 'Linux' && matrix.node-version == '14.x'
      env:
        E2E_TEST_ESS_POD: ${{ secrets.E2E_TEST_ESS_PROD_POD }}
        E2E_TEST_ESS_IDP_URL: ${{ secrets.E2E_TEST_ESS_PROD_IDP_URL }}
        E2E_TEST_ESS_REFRESH_TOKEN: ${{ secrets.E2E_TEST_ESS_PROD_REFRESH_TOKEN }}
        E2E_TEST_ESS_CLIENT_ID: ${{ secrets.E2E_TEST_ESS_PROD_CLIENT_ID }}
        E2E_TEST_ESS_CLIENT_SECRET: ${{ secrets.E2E_TEST_ESS_PROD_CLIENT_SECRET }}
        E2E_TEST_ESS_COMPAT_POD: ${{ secrets.E2E_TEST_ESS_COMPAT_PROD_POD }}
        E2E_TEST_ESS_COMPAT_IDP_URL: ${{ secrets.E2E_TEST_ESS_COMPAT_PROD_IDP_URL }}
        E2E_TEST_ESS_COMPAT_REFRESH_TOKEN: ${{ secrets.E2E_TEST_ESS_COMPAT_PROD_REFRESH_TOKEN }}
        E2E_TEST_ESS_COMPAT_CLIENT_ID: ${{ secrets.E2E_TEST_ESS_COMPAT_PROD_CLIENT_ID }}
        E2E_TEST_ESS_COMPAT_CLIENT_SECRET: ${{ secrets.E2E_TEST_ESS_COMPAT_PROD_CLIENT_SECRET }}
    # Ideally, we'd autodetect installed browsers and run them headlessly.
    # See https://github.com/DevExpress/testcafe/issues/5641
    - name: Prepare browser-based end-to-end tests
      run: |
        cd .codesandbox/sandbox
        npm install
        # Run the end-to-end tests against the code in this branch specifically:
        npm install ../../
        cd ../..
    - name: Run browser-based end-to-end tests (Linux)
      # TODO: Add Edge/merge with Windows setup once Edge is available on Linux:
      run: npm run e2e-test-browser -- firefox:headless,chrome:headless
      # The Node version does not influence how well our tests run in the browser,
      # so we only need to test in one:
      # (But I've explicitly set it to *not* run in the oldest versions,
      # rather than running in the newest, so ensure that changing Node versions in CI
      # does not cause end-to-end tests to stop running.)
      if: matrix.node-version != '10.x' && matrix.node-version != '12.x' && runner.os == 'Linux'
      env:
        E2E_TEST_ESS_IDP_URL: ${{ secrets.E2E_TEST_ESS_PROD_IDP_URL }}
        E2E_TEST_ESS_POD: ${{ secrets.E2E_TEST_ESS_PROD_POD }}
        E2E_TEST_ESS_COGNITO_USER: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_USER }}
        E2E_TEST_ESS_COGNITO_PASSWORD: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_PASSWORD }}
    - name: Run browser-based end-to-end tests (Windows)
      continue-on-error: true
      run: npm run e2e-test-browser -- edge:headless,firefox:headless,chrome:headless
      # The Node version does not influence how well our tests run in the browser,
      # so we only need to test in one:
      # (But I've explicitly set it to *not* run in the oldest versions,
      # rather than running in the newest, so ensure that changing Node versions in CI
      # does not cause end-to-end tests to stop running.)
      if: matrix.node-version != '10.x' && matrix.node-version != '12.x' && runner.os == 'Windows'
      env:
        E2E_TEST_ESS_IDP_URL: ${{ secrets.E2E_TEST_ESS_PROD_IDP_URL }}
        E2E_TEST_ESS_POD: ${{ secrets.E2E_TEST_ESS_PROD_POD }}
        E2E_TEST_ESS_COGNITO_USER: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_USER }}
        E2E_TEST_ESS_COGNITO_PASSWORD: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_PASSWORD }}
    - name: Run browser-based end-to-end tests (MacOS)
      continue-on-error: true
      # MacOS needs a somewhat particular setup. It is running with "System Integrity Protection"
      # enabled, which results in TestCafe needing screen recording permission, which it cannot
      # obtain programmatically. Thus, we have to run the browser as a remote as a workaround.
      # Source: https://devexpress.github.io/testcafe/documentation/guides/continuous-integration/github-actions.html#step-2---create-a-job
      # Additionally, the tests on MacOS fail particularly often due to network errors;
      # hence, they are run in quarantine mode (--quarantine-mode) to make TestCafe automatically retry them.
      run: |
        export HOSTNAME=localhost
        export PORT1=1337
        export PORT2=1338
        npm run e2e-test-browser -- remote --hostname ${HOSTNAME} --ports ${PORT1},${PORT2} --quarantine-mode &
        pid=$!
        sleep 1s
        open -a Safari http://${HOSTNAME}:${PORT1}/browser/connect
        wait $pid
      # Connecting to a remote appears to run into a race condition every now and then,
      # where TestCafe waits for the browser endlessly. 20 minutes should be more than enough at the
      # time of writing for the end-to-end tests to succeed, so cut them off after that:
      timeout-minutes: 20
      # The Node version does not influence how well our tests run in the browser,
      # so we only need to test in one:
      # (But I've explicitly set it to *not* run in the oldest versions,
      # rather than running in the newest, so ensure that changing Node versions in CI
      # does not cause end-to-end tests to stop running.)
      if: matrix.node-version != '10.x' && matrix.node-version != '12.x' && runner.os == 'macOS'
      env:
        E2E_TEST_ESS_IDP_URL: ${{ secrets.E2E_TEST_ESS_PROD_IDP_URL }}
        E2E_TEST_ESS_POD: ${{ secrets.E2E_TEST_ESS_PROD_POD }}
        E2E_TEST_ESS_COGNITO_USER: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_USER }}
        E2E_TEST_ESS_COGNITO_PASSWORD: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_PASSWORD }}
    - run: npx package-check
    - run: npm run check-licenses
    - run: npm audit --audit-level=moderate
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2.2.2
      continue-on-error: true
      with:
        name: code-coverage-report
        path: coverage
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2.2.2
      continue-on-error: true
      with:
        name: dist
        path: dist
